version: "3"
services:
  postgres:
    image: postgres:11.1-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
    ports:
      - 5432:5432

  oracle:
    image: maxnilz/oracle-ee:12.2.0.1
    container_name: oracle
    ports:
      - 1521:1521
    volumes:
      - db-oracle-data:/opt/oracle/oradata

  mssql:
    image: microsoft/mssql-server-linux
    container_name: mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Tes9ting
    ports:
      - 1433:1433
    volumes:
      - ${HOME}/code/df/dev/data/mssql:/var/opt/mssql

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - 9000:9000
    environment:
      MINIO_ACCESS_KEY: minio_access
      MINIO_SECRET_KEY: minio_secret
    command: server /data

  mongodb:
    image: mongo:4.1.5
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017

  consul:
    image: consul
    container_name: consul
    command: consul agent -client=0.0.0.0 -dev
    ports:
      - 8500:8500
      - 8502:8502
      - 8600:8600

  redis:
    image: redis:5.0.8
    container_name: redis
    ports:
      - 6379:6379

  rabbitstomp:
    image: itzg/rabbitmq-stomp
    container_name: rabbitstomp
    ports:
      - 5672:5672
      - 15672:15672
      - 61613:61613

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:2.12-2.1.1
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  es:
    image: elasticsearch:7.6.1
    container_name: es
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node

  envs:
    image: registry.tespkg.in/library/envs:alpine3.10
    container_name: envs
    command: >
      /usr/local/envs/bin/envs
      --address :9112
      --dsn http://consul:8500/envs
      --asset-dir /usr/local/envs/static
    ports:
      - 9112:9112
    depends_on:
      - consul

  sso:
    image: registry.gitlab.com/target-digital-transformation/sso/master:6482c942
    container_name: sso
    command: >
      --publish ssoGRPCAddr=sso:5557
      /usr/local/bin/dex serve '$${envf:// .ssoConfig | default /usr/local/config/sso.yaml }'
    environment:
      ENVS_HTTP_ADDR: http://host.docker.internal:9112
    ports:
      - 5556:5556
      - 5557:5557
    depends_on:
      - envs
      - postgres

  sso-client:
    image: registry.tespkg.in/sso/example-app
    container_name: sso-client
    command: >
      /usr/local/bin/dex-client
      --listen=http://0.0.0.0:5555
      --issuer='$${env:// .ssoIssuer }'
      --client-id='$${env:// .ssoOAuth2ClientID }'
      --client-secret='$${env:// .ssoOAuth2ClientSecret }'
      --redirect-uri='$${env:// .ssoOAuth2RedirectURI }'
    environment:
      ENVS_HTTP_ADDR: http://host.docker.internal:9112
    ports:
      - 5555:5555
    depends_on:
      - envs
      - sso

  ac:
    image: registry.tespkg.in/ac/service
    container_name: ac
    command: |
      --publish acGRPCAddr=ac:7001
      /usr/local/bin/ac-serve serve
      --address=:7001
      --oidc='$${env:// .ssoIssuer }'
      --dsn='$${env:// .acDSN }'
      --skip-client-id
    environment:
      ENVS_HTTP_ADDR: http://host.docker.internal:9112
      TARGET_SYS_ADMIN: CiQwOGE4Njg0Yi1kYjg4LTRiNzMtOTBhOS0zY2QxNjYxZjU0NjYSBWxvY2Fs
    ports:
      - 7001:7001
    depends_on:
      - envs
      - postgres
      - sso

  acconsole:
    image: registry.tespkg.in/ac/console
    container_name: acconsole
    environment:
      ENVS_HTTP_ADDR: http://host.docker.internal:9112
      VUE_APP_API_ENDPOINT: '$${env:// .acHTTPAddr }'
      VUE_APP_TOKEN_URL: '$${env:// .ssoIssuer }/token'
      VUE_APP_AUTH_URL: '$${env:// .ssoIssuer }/auth'
      VUE_APP_CLIENT_ID: '$${env:// .acOAuth2ClientID }'
      VUE_APP_CLIENT_SECRET: '$${env:// .acOAuth2ClientSecret }'
      VUE_APP_REDIRECT_URL: '$${env:// .acOAuth2RedirectURI }'
      VUE_APP_STATE: acconsole
    ports:
      - 8080:8080
    depends_on:
      - envs
      - ac

  profile-grpc:
    image: registry.tespkg.in/profile/service
    container_name: profile-grpc
    command: >
      --publish profileGRPCAddr=profile-grpc:50051
      /usr/local/bin/profile-serve profile grpc
      --address=:50051
      --oidc='$${env:// .ssoIssuer }'
      --dsn='$${env:// .profileDSN }'
      --rabbitmq-addr='$${env:// .rabbitMQAddr }'
      --sso-dex-grpc-addr='$${env:// .ssoGRPCAddr }'
      --verbose
    environment:
      ENVS_HTTP_ADDR: http://host.docker.internal:9112
    ports:
      - 50051:50051
    depends_on:
      - envs
      - postgres
      - rabbitstomp
      - sso

  profile-graphql:
    image: registry.tespkg.in/profile/service
    container_name: profile-graphql
    command: >
      --publish profileInternalHTTPAddr=http://profile-graphql:9301
      /usr/local/bin/profile-serve profile graphql
      --address=:9301
      --oidc='$${env:// .ssoIssuer }'
      --dsn='$${env:// .profileDSN }'
      --rabbitmq-addr='$${env:// .rabbitMQAddr }'
      --redis='$${env:// .redisAddr }'
      --cors-hosts='$${env:// .profileCORS | default https://localhost:8000,http://localhost:8000 }'
      --ses-grpc='$${env:// .sesGRPCAddr }'
      --msg-pusher-grpc='$${env:// .msgPusherGRPCAddr }'
      --notification-addr='$${env:// .notificationAddr }'
      --debug-url-prefix=/graphql
      --bypass-license
      --verbose
    environment:
      ENVS_HTTP_ADDR: http://host.docker.internal:9112
    ports:
      - 9301:9301
    depends_on:
      - envs
      - postgres
      - rabbitstomp
      - redis
      - sso

  configurator-be:
    image: registry.tespkg.in/configurator/service
    container_name: configurator-be
    command: >
      --publish configuratorGRPCAddr=configurator-be:9302
      /usr/local/bin/subscription-store serve
      --grpc-address=:9302
      --address=:9303
      --oidc='$${env:// .ssoIssuer }'
      --dsn='$${env:// .configuratorDSN }'
      --sso-grpc='$${env:// .ssoGRPCAddr }'
      --ac-grpc='$${env:// .acGRPCAddr }'
      --ses-grpc='$${env:// .sesGRPCAddr }'
      --profile-grpc='$${env:// .profileGRPCAddr }'
      --cors-hosts='$${env:// .configuratorCORS | default http://localhost:8000,https://localhost:8000 }'
      --rabbitmq-dsn='$${env:// .rabbitMQAddr }'
      --bypass-license
      --verbose
    environment:
      ENVS_HTTP_ADDR: http://host.docker.internal:9112
    ports:
      - 9302:9302
      - 9303:9303
    depends_on:
      - envs
      - postgres
      - rabbitstomp
      - sso
      - profile-grpc
      - ac

  configurator-fe:
    image: registry.tespkg.in/configurator/web
    container_name: configurator-fe
    environment:
      ENVS_HTTP_ADDR: http://host.docker.internal:9112
    ports:
      - 8080:80
    depends_on:
      - envs
      - configurator-be
      - profile-graphql

  envoy:
    image: envoyproxy/envoy:v1.11.2
    container_name: envoy
    command: |
      /usr/local/bin/envoy -c /etc/envoyproxy/envoy.yaml
    ports:
      - 80:80
    volumes:
      - ${PWD}/envoy.yaml:/etc/envoyproxy/envoy.yaml

networks:
  default:
    external:
      name: meera

volumes:
  db-oracle-data:
    external: true
