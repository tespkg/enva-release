services:
  - name: gcr.io/etcd-development/etcd:v3.3.13
    alias: etcd
    command: ["/usr/local/bin/etcd", "--listen-client-urls=http://0.0.0.0:2379", "--advertise-client-urls=http://0.0.0.0:2379"]
  - name: consul:1.15.4
    command: ["consul", "agent", "-client=0.0.0.0", "-dev"]

variables:
  APP_CHART_NAME: envs ## replace the right chart name
  RELEASE_NAME: envs
  KUBECONFIG: /etc/deploy/config
  SLACK_CHANNEL: gitlab-notifications
  DOCKER_DRIVER: overlay2
  manifests_ci_token: $manifests_ci_token_envs
  manifests_repo: gitlab.com/target-digital-transformation/devops-group/manifests/general/envs.git

stages:
  - unit-test
  - test
  - build
  - deploy_to_dev
  - push_incubator_chart
  - deploy_to_test
  - push_stable_chart
  - release_request
  - deploy_to_staging
  - deploy_to_demo
  - deploy_to_prod

include:
  - remote: https://target-digital-transformation.gitlab.io/pipeline/01_build_reuse_image.yml
  - remote: https://target-digital-transformation.gitlab.io/pipeline/02_v2_deploy_to_dev.yml
  - remote: https://target-digital-transformation.gitlab.io/pipeline/03_v2_push_Incubator_chart.yml
  - remote: https://target-digital-transformation.gitlab.io/pipeline/04_v2_deploy_to_test.yml
  - remote: https://target-digital-transformation.gitlab.io/pipeline/05_v2_push_stable_chart.yml
  - remote: https://target-digital-transformation.gitlab.io/pipeline/06_v2_release_request.yml
  - remote: https://target-digital-transformation.gitlab.io/pipeline/07_v2_deploy_to_staging.yml
  - remote: https://target-digital-transformation.gitlab.io/pipeline/07_v2_deploy_to_prod_odp_azure.yml
  - remote: https://target-digital-transformation.gitlab.io/pipeline/07_v2_deploy_to_prod_eks_fluxble.yml
  - remote: https://target-digital-transformation.gitlab.io/pipeline/02_v3_deploy_to_dev_via_argocd.yml
  - remote: https://target-digital-transformation.gitlab.io/pipeline/04_v3_deploy_to_test_via_argocd.yml
  - remote: https://target-digital-transformation.gitlab.io/pipeline/07_v3_deploy_to_prod_via_argocd.yml

test-coverage:
  image: golang:1.13
  stage: unit-test
  before_script:
    - export PATH=$PATH:$GOPATH/bin
    - export ETCD_DSN=etcd://etcd:2379/a/bc
    - export CONSUL_DSN=http://consul:8500/a/bc
    - |
      if ( echo ${CI_RUNNER_TAGS} | grep -q kubernetes ); then
        export DOCKER_HOST="tcp://localhost:2375"
        export ETCD_DSN=etcd://localhost:2379/a/bc
        export CONSUL_DSN=http://localhost:8500/a/bc
      fi  
  script:
    - make run-test
  tags:
    - k8s

build_enva:
  image: docker:20.10
  stage: build
  services:
    - docker:20.10-dind
  before_script:
    - apk add bash make
    - if ( echo ${CI_RUNNER_TAGS} | grep -q docker-in-docker );then export DOCKER_HOST="tcp://docker:2376";else echo "nothing to do";fi
    - docker login -u tespkg -p $DOCKER_REGISTRY_TESPKG_PASSWORD registry.tespkg.in 
  script:
    - sleep 60
    - make PUSH=true build-images
  only:
    - master
    - tags
  tags:
    - k8s

build_image_envs:
  extends: .build_single_image
  stage: build
  only:
    - master
    - tags
  tags:
    - k8s